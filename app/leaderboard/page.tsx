'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';

interface Participant {
  id: number;
  name: string;
  avatar: string;
  rating: number;
  contestsWon: number;
  contestsParticipated: number;
  badges: string[];
}

export default function Leaderboard() {
  const [participants, setParticipants] = useState<Participant[]>([]);
  const [loading, setLoading] = useState(true);
  const [category, setCategory] = useState('all');
  const [period, setPeriod] = useState('all');

  useEffect(() => {
    const fetchLeaderboard = async () => {
      try {
        // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API-–∑–∞–ø—Ä–æ—Å
        const mockParticipants: Participant[] = [
          {
            id: 1,
            name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
            avatar: 'https://api.dicebear.com/7.x/initials/svg?seed=AP',
            rating: 2850,
            contestsWon: 12,
            contestsParticipated: 25,
            badges: ['üèÜ', '‚≠ê', 'üé®']
          },
          {
            id: 2,
            name: '–ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
            avatar: 'https://api.dicebear.com/7.x/initials/svg?seed=MS',
            rating: 2720,
            contestsWon: 10,
            contestsParticipated: 20,
            badges: ['üèÜ', 'üì∏']
          },
          {
            id: 3,
            name: '–ï–ª–µ–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
            avatar: 'https://api.dicebear.com/7.x/initials/svg?seed=EI',
            rating: 2680,
            contestsWon: 8,
            contestsParticipated: 18,
            badges: ['‚≠ê', '‚úçÔ∏è']
          }
        ];
        setParticipants(mockParticipants);
      } catch (error) {
        console.error('Error fetching leaderboard:', error);
      } finally {
        setLoading(false);
      }
    };

    fetchLeaderboard();
  }, []);

  return (
    <div className="container py-4">
      <div className="row mb-4">
        <div className="col">
          <h2 className="mb-4">–†–µ–π—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h2>
          
          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="card shadow-sm mb-4">
            <div className="card-body">
              <div className="row g-3">
                <div className="col-md-6">
                  <select
                    className="form-select"
                    value={category}
                    onChange={(e) => setCategory(e.target.value)}
                  >
                    <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    <option value="photo">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è</option>
                    <option value="art">–†–∏—Å—É–Ω–æ–∫</option>
                    <option value="literature">–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞</option>
                  </select>
                </div>
                <div className="col-md-6">
                  <select
                    className="form-select"
                    value={period}
                    onChange={(e) => setPeriod(e.target.value)}
                  >
                    <option value="all">–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</option>
                    <option value="month">–ó–∞ –º–µ—Å—è—Ü</option>
                    <option value="year">–ó–∞ –≥–æ–¥</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          {/* –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ */}
          {loading ? (
            <div className="text-center py-5">
              <div className="spinner-border text-primary" role="status">
                <span className="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
              </div>
            </div>
          ) : (
            <div className="card shadow-sm">
              <div className="card-body">
                <div className="table-responsive">
                  <table className="table table-hover">
                    <thead>
                      <tr>
                        <th>–ú–µ—Å—Ç–æ</th>
                        <th>–£—á–∞—Å—Ç–Ω–∏–∫</th>
                        <th>–†–µ–π—Ç–∏–Ω–≥</th>
                        <th>–ü–æ–±–µ–¥—ã</th>
                        <th>–£—á–∞—Å—Ç–∏–µ</th>
                        <th>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</th>
                      </tr>
                    </thead>
                    <tbody>
                      {participants.map((participant, index) => (
                        <tr key={participant.id}>
                          <td>
                            <span className="fs-5">
                              {index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : index + 1}
                            </span>
                          </td>
                          <td>
                            <div className="d-flex align-items-center">
                              <img
                                src={participant.avatar}
                                alt={participant.name}
                                className="rounded-circle me-2"
                                width="32"
                                height="32"
                              />
                              <Link
                                href={`/profile/${participant.id}`}
                                className="text-decoration-none text-body"
                              >
                                {participant.name}
                              </Link>
                            </div>
                          </td>
                          <td>
                            <span className="badge bg-primary">
                              {participant.rating}
                            </span>
                          </td>
                          <td>{participant.contestsWon}</td>
                          <td>{participant.contestsParticipated}</td>
                          <td>
                            <div className="d-flex gap-1">
                              {participant.badges.map((badge, i) => (
                                <span
                                  key={i}
                                  className="badge bg-light text-dark border"
                                  style={{ fontSize: '1.2em' }}
                                >
                                  {badge}
                                </span>
                              ))}
                            </div>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* –õ–µ–≥–µ–Ω–¥–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π */}
      <div className="card shadow-sm">
        <div className="card-body">
          <h5 className="card-title">–õ–µ–≥–µ–Ω–¥–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</h5>
          <div className="row g-3">
            <div className="col-md-3">
              <div className="d-flex align-items-center">
                <span className="badge bg-light text-dark border me-2" style={{ fontSize: '1.2em' }}>
                  üèÜ
                </span>
                <span>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –∫–æ–Ω–∫—É—Ä—Å–∞</span>
              </div>
            </div>
            <div className="col-md-3">
              <div className="d-flex align-items-center">
                <span className="badge bg-light text-dark border me-2" style={{ fontSize: '1.2em' }}>
                  ‚≠ê
                </span>
                <span>–¢–æ–ø-10 —Ä–µ–π—Ç–∏–Ω–≥–∞</span>
              </div>
            </div>
            <div className="col-md-3">
              <div className="d-flex align-items-center">
                <span className="badge bg-light text-dark border me-2" style={{ fontSize: '1.2em' }}>
                  üé®
                </span>
                <span>–•—É–¥–æ–∂–Ω–∏–∫ –≥–æ–¥–∞</span>
              </div>
            </div>
            <div className="col-md-3">
              <div className="d-flex align-items-center">
                <span className="badge bg-light text-dark border me-2" style={{ fontSize: '1.2em' }}>
                  üì∏
                </span>
                <span>–§–æ—Ç–æ–≥—Ä–∞—Ñ –≥–æ–¥–∞</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 